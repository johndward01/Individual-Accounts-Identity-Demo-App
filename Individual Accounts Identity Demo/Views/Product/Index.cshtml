@model IEnumerable<Product>

<h2>Products</h2>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div style="display: block">
    <a href="/Product/InsertProduct/">Create a New Product</a>
</div>

<table class="table">
    <tr>
        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParam"]">@Html.DisplayNameFor(product => product.ProductID)</a></th>
        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">@Html.DisplayNameFor(product => product.Name)</a></th>
        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParam"]">@Html.DisplayNameFor(product => product.Price)</a></th>
        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParam"]">@Html.DisplayNameFor(product => product.CategoryID)</a></th>
        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["OnSaleSortParam"]">@Html.DisplayNameFor(product => product.OnSale)</a></th>
        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["StockLevelSortParam"]">@Html.DisplayNameFor(product => product.StockLevel)</a></th>
    </tr>

    @foreach (var product in Model)
    {
        <tr>
            <td><a href=/Product/ViewProduct/@product.ProductID>@product.ProductID</a></td>
            <td>@product.Name</td>
            <td>@product.Price</td>
            <td>@product.CategoryID</td>
            <td>@product.OnSale</td>
            <td>@product.StockLevel</td>
        </tr>

    }
</table>
